#include <boost/bind.hpp>
#include <boost/asio/io_service.hpp>

#include "Client.h"
#include "Request.h"
#include "Response.h"

// using boost::asio::ip::tcp;
char req_example[] =
{
        0x01, // VerM
        0x00, // VerS
        0x00, // ReqType
        0x53, 0x45, 0x52, 0x56, 0x48, 0x41, 0x53, 0x48, // PkgType
        0x01, // PkgSum
        0x01, // PkgNum
        0x00, 0x00, 0x00, 0xda, // DataSum
        0x00, 0x00, 0x00, 0xda, // DataLen

        /* data */
        0x69, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x03, 0x65,
        0x00, 0x00, 0x00, 0x18, 0x00, 0x0a, 0x5f, 0x5f,
        0x44, 0x49, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x32,
        0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x01,
        0x08, 0x00, 0x00, 0x00, 0x29, 0x00, 0x0a, 0x5f,
        0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x49, 0x4e,
        0x32, 0x37, 0x35, 0x30, 0x33, 0x3a, 0x2d, 0x31,
        0x32, 0x30, 0x38, 0x38, 0x39, 0x39, 0x33, 0x36,
        0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
        0x30, 0x31, 0x65, 0x00, 0x00, 0x00, 0x1f, 0x00,
        0x11, 0x5f, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f,
        0x53, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x4e, 0x41,
        0x4d, 0x45, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
        0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x26, 0x00,
        0x11, 0x5f, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f,
        0x53, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x4e, 0x41,
        0x4d, 0x45, 0x4d, 0x79, 0x44, 0x65, 0x6d, 0x6f,
        0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
        0x32, 0x65, 0x00, 0x00, 0x00, 0x17, 0x00, 0x09,
        0x5f, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x49,
        0x4e, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
        0x01, 0x08, 0x00, 0x00, 0x00, 0x28, 0x00, 0x09,
        0x5f, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x49,
        0x4e, 0x37, 0x35, 0x30, 0x33, 0x3a, 0x2d, 0x31,
        0x32, 0x30, 0x38, 0x38, 0x39, 0x39, 0x33, 0x36,
        0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
        0x30, 0x31 };

void output_example()
{
    std::cout << "len = " << sizeof(req_example) << std::endl;
    for (unsigned i = 0; i < sizeof(req_example); ++i) {
        std::cout << (int) req_example[i] << ", ";
        if ((i + 1) % 8 == 0)
            std::cout << std::endl;
    }

    std::cout << std::endl;
}

static size_t Request::PkgHeadSize = 21;
static size_t Response::PkgHeadSize = 21;

int main(int argc, const char** argv)
{
    std::ostream& logger = std::cout;
    logger << "Starting...\n";

    try {
        boost::asio::io_service io_service;
        logger << "Create io_service!" << std::endl;

        Client c(io_service, logger);

        if (c.IsConnected()) {
            logger << "send example request\n";
            output_example();

            c.write(Request(req_example, sizeof(req_example)));

            Response resp = c.read();
        }

        logger << "over\n";
        c.close();
    } catch (std::exception& e) {
        logger << "Exception: " << e.what() << "\n";
    }
}
